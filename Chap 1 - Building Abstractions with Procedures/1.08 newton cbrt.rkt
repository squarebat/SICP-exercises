#lang sicp
(define (square x) (* x x))
(define (improve guess x)
  (/ (+ (/ x (square guess)) (* 2 guess)) 3)
)
(define (good_enough? guess new_guess)
  (< (/ (abs (- new_guess guess)) guess) 0.000001)
)
(define (cbrt-iter guess x)
    (define new_guess (improve guess x))
    (if (good_enough? guess new_guess)
        guess
        (cbrt-iter new_guess x)
    )
)
(define (cbrt n)
    (cbrt-iter 1.0 n)
)

(cbrt 0.000001)
